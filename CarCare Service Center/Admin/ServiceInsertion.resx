<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picService.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="fileImage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>