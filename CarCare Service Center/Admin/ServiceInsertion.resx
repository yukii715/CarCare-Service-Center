<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picService.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Pfb4P7NsRso6UdjIAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="fileImage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>